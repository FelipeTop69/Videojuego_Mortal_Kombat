// <auto-generated />
using Entity.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entity.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.Carta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Destreza")
                        .HasColumnType("int");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("Elemento")
                        .HasColumnType("int");

                    b.Property<int>("Fuerza")
                        .HasColumnType("int");

                    b.Property<int>("GolpeFinal")
                        .HasColumnType("int");

                    b.Property<string>("ImagenUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Resistencia")
                        .HasColumnType("int");

                    b.Property<int>("Salud")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carta");
                });

            modelBuilder.Entity("Entity.Models.Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadCartasGanadas")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdenTurno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Jugador");
                });

            modelBuilder.Entity("Entity.Models.JugadorCarta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartaId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int?>("RondaJugado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartaId");

                    b.HasIndex("JugadorId");

                    b.ToTable("JugadorCarta");
                });

            modelBuilder.Entity("Entity.Models.JugadorCarta", b =>
                {
                    b.HasOne("Entity.Models.Carta", "Carta")
                        .WithMany("JugadorCartas")
                        .HasForeignKey("CartaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.Jugador", "Jugador")
                        .WithMany("Cartas")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carta");

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("Entity.Models.Carta", b =>
                {
                    b.Navigation("JugadorCartas");
                });

            modelBuilder.Entity("Entity.Models.Jugador", b =>
                {
                    b.Navigation("Cartas");
                });
#pragma warning restore 612, 618
        }
    }
}
